locale:
  none: (None)
  en-us: English

generic:
  close: Close
  comingSoon: Coming Soon
  created: Created
  customize: Customize
  na: "n/a"
  unknown: Unknown

suffix:
  ib: iB
  cpus: CPUs

header:
  backToRancher: "← Back to Rancher"

common:
  labels: 标签
  annotations: 注释
nav:
  ns:
    all: All Namespaces
    user: All User Namespaces
    system: All System Namespaces
    clusterLevel: Cluster-Level Resources
    namespaced: Namespaced Resources
    project: "Project: {name}"
    namespace: "{name}"
    orphan: "Not in a Project"

formKeyValue:
  protip: '高级技巧: 在键(Key)输入栏中粘贴一行或多行的key=value键值对能够批量输入。'

cluster:
  provider:
    amazonelasticcontainerservice:
      label: Amazon Elastic Container Service for Kubernetes
      shortLabel: Amazon EKS
    tencentengine:
      label: Tencent Kubernetes Engine
      shortLabel: Tencent TKE
    azurekubernetesservice:
      label: Azure Container Service
      shortLabel: Azure AKS
    aliyunengine:
      label: Aliyun Kubernetes Container Service
      shortLabel: Alibaba ACK
    googlekubernetesengine:
      label: Google Kubernetes Engine
      shortLabel: Google GKE
    k3simport:
      label: Rancher K3S
      shortLabel: K3S
    huaweiengine:
      label: Huawei Cloud Container Engine
      shortLabel: Huawei CCE
    oracleokeengine:
      label: Oracle Container Engine long
      shortLabel: Oracle OKE
    rancherkubernetesengine:
      label: Rancher Kubernetes Engine
      shortLabel: Custom
    custom:
      label: From existing nodes (Custom)
      shortLabel: Custom
    imported:
      label: Import an existing cluster
      shortLabel: Imported

containerResourceLimit:
  label: Container Default Resource Limit
  helpText: Configure how much of the resources the container can consume by default.
  helpTextDetail: The amount of resources the container can consume by default.
  requestsCpu: CPU预留
  requestsMemory: 内存预留
  limitsCpu: CPU限制
  limitsMemory: 内存限制
  cpuPlaceholder: e.g. 1000
  memPlaceholder: e.g. 128


footer:
  docs: Docs
  forums: Forums
  slack: Slack
  issue: File an Issue
  download: Download CLI

clusterIndexPage:
  header: "Cluster: {name}"
  sections:
    nodes:
      label: Unhealthy Nodes
      noRows: "There are no unhealthy nodes to show."
    gatekeeper:
      label: OPA Gatekeeper Constraint Violations
      disabled: OPA Gatekeeper is not configured.
      buttonText: Configure Gatekeeper
      noRows: "There are no contrains with violations to show."
    events:
      label: Events

gatekeeperIndex:
  unavailable: "OPA + Gatekeeper is not available in the system-charts catalog."
  violations: Violations

gatekeeperConfig:
  header: OPA Gatekeeper
  flag: Experimental
  configure:
    description: Description
    helpText:
      listItem1: "OPA Gatekeeper provides first-class integration between OPA (Open Policy Agent) and Kubernetes."
      listItem2: "You can Customize Gatekeeper’s yaml configuartion or Enable Gatekeeper with defaults."
      listItem3: "For more information, visit the "
      listItem4: "OPA Documentation."
    requirements:
      header: Requirements
      helpText:
        listItem1: "0.1 CPU Cores"
        listItem2: "256 MiB of Memory"
  infoBox:
    auditFromCache: Audit From Cache
    auditInterval: Audit Interval
    constraintViolationsLimit: Constraint Violation Limit
    replicas: Replicas
    imageRepository: Image
    imageTag: Version
  yaml:
    buttonText: Customize

gatekeeperConstraint:
  template: Template
  violations:
    title: Violations
  parameters:
    title: Parameters
    editAsForm: Edit as Form
    editAsYaml: Edit as YAML
    addParameter: Add Parameter
  enforcementAction:
    title: Enforcement Action
  match:
    title: Match
  tab:
    namespaces:
      title: Namespaces
      sub:
        namespaces: Namespaces
        excludedNamespaces: Excluded Namespaces
    selectors:
      title: Selectors
      sub:
        labelSelector: 
          title: Label Selector
          addLabel: Add Label
        namespaceSelector: 
          title: Namespace Selector
          addNamespace: Add Namespace
    kinds:
      title: Kinds



infoBoxCluster:
  cpu: CPU Usage
  created: Created
  memory: Memory
  pods: Pods
  provider: Provider
  reserved: "{numerator} of {denominator} reserved"
  used: "{numerator} of {denominator} used"
  version: Kubernetes Version
  nodes:
    label: Nodes
    total:
      label: Total Nodes
    worker:
      label: Worker
    etcd:
      label: Etcd
    controlPlane:
      label: Control Plane

resourceDetail:
  header:
    view: '{name}'
    create: 'Create {type}'
    edit: 'Edit {type}: {name}'
    clone: 'Clone from {type}: {name}'
    stage: 'Stage from {type}: {name}'
  masthead:
    namespace: 'Namespace'
    project: 'Project'
    yaml: 'YAML'
    overview: 'Overview'

sortableTable:
  noRows: "没有数据"
  noData: "没有符合条件的数据"
  paging:
    generic: |
      {pages, plural,
      =0 {No Items}
      =1 {{count} {count, plural, =1 {Item} other {Items}}}
      other {{from} - {to} of {count} Items}}
    resource: |
      {pages, plural,
      =0 {No {pluralLabel}}
      =1 {{count} {count, plural, =1 {{singularLabel}} other {{pluralLabel}}}}
      other {{from} - {to} of {count} {pluralLabel}}}
    workload: |
      {pages, plural,
      =0 {No Workloads}
      =1 {{count} {count, plural, =1 {Workload} other {Workloads}}}
      other {{from} - {to} of {count} Workloads}}

model:
  namespace:
    project: "Project: {name}"
    notInAProject: "Not in a Project"

configmapPage:
  data:
    title: Data
    protip: Use this area for anything that's UTF-8 text data
  tabs:
    binaryData:
      label: Binary Data

wm:
  connection:
    connected: Connected
    disconnected: Disconnected
    error: Error
  containerShell:
    containerName: 'Container: {label}'
    clear: Clear
  containerLogs:
    containerName: 'Container: {label}'
    clear: Clear
    download: Download
    follow: Follow
    range:
      label: Show the last
      lines: '{value} Lines'
      minutes: '{value} Minutes'
      hours: '{value} Hours'
      all: 'Everything'
    previous: Use Previous Container
    wrap: Wrap Lines
    timestamps: Show Timestamps
    search: Filter
    noMatch: No lines match the current filter.
    noData: There are no log entries to show in the current range.

tableHeaders:
  state: 状态
  download: Download
  internalExternalIp: "内部/外部 IP"
  name: 名称
  simpleName: 名称
  effect: 影响
  nameUnlinked: Name
  namespaceNameUnlinked: Name
  namespaceName: 名称
  node: 主机
  nodeName: Name
  roles: 角色
  version: 版本
  cpu: 处理器
  ram: 内存
  pods: Pods
  age: 持续时间
  image: Image
  rioImage: Image
  podImages: 镜像
  endpoints: 访问端口
  scale: Scale
  simpleScale: Scale
  weight: Weight
  success: Success
  reqRate: Req Rate
  p95: 95%tile
  keys: Data
  targetKind: Target Type
  target: Target
  matches: Matches
  destination: Target
  username: Username
  userDisplayName: Display Name
  userId: ID
  userStatus: Status
  address: 地址
  simpleType: 类型
  imageSize: 大小
  type: 类型
  targetPort: Target
  selector: Selector
  status: 状态
  lastHeartbeatTime: 最后更新
  reason: 状态原因
  message: 消息
  key: 键
  value: 值
  builtIn: Built In
  clusterCreatorDefault: Cluster Creator Default
  resource: Resource
  apiGroup: API Groups
  ingressTarget: Target
  rbac:
    create: Create
    delete: Delete
    get: Get
    list: List
    patch: Patch
    update: Update
    watch: Watch

node:
  detail:
    detailTop:
      ipAddress: IP地址
      version: Kubelet版本
      os: 操作系统
      containerRuntime: 创建时间
    glance:
      pidPressure: PID负载
      diskPressure: 磁盘负载
      memoryPressure: 内存负载
      kubelet: kubelet
      consumptionGauge:
        cpu: CPU
        memory: MEMORY
        pods: PODS
        amount: '{used} of {total} {unit} used'
    tab:
      conditions: 状态
      info: 系统信息
      address: 地址
      images: 镜像
      taints: Taints

internalExternalIP:
  none: None

cruStorageClass:
  provisioner:
    label: Provisioner
  pv:
    title: Persistent Volumes
    detail: Persistent Volumes provisioned by the current storage class.
  pvc: Persistent Volume Claim
  source:
    label: Volume Plugin
    title: Plugin Configuration
    detail: Configure options for the selected volume plugin
    prompt: Choose a volume plugin...
  parameters:
    title: Parameters
    detail: Configure the provider-specific parameters for the storage class
    addActionLabel: Add Parameter
persistentVolumePage:
  header: Persistent Volumes
  addActionLabel: Add Volume
  noData: There are no persistent volumes defined
  noMatch: No persistent volumes match the current search
  source:
    label: Source

workload:
  container:
    titles:
      ports: 端口
      command: 命令
      resources: 资源
      healthCheck: 健康检查
      securityContext: 安全上下文
      environmentVariables: 环境变量
      requestHeaders: 请求头
    name: Container Name
    image: Container Image
    imagePullPolicy: Image Pull Policy
    ports:
      containerPort: 容器端口
      hostPort: Public Host Port
      protocol: 协议
      name: 名称
    command:
      command: 入口
      args: 参数
      workingDir: 工作目录
      env: 环境变量
      stdin: 标准输入
      addFromResource: Add from Resource
      type: 类型
      source: 资源
      key: 键
      prefixOfAlias: 前缀或别名
    healthcheck:
      readinessProbe: Readiness Probe
      livenessProbe: Liveness Probe
      startupProbe: Startup Probe
      livenessTip: Containers will be restarted when this check is failing.  Not recommended for most uses.
      readinessTip: Containers will be removed from service endpoints when this check is failing.  Recommended.
      startupTip: Containers will wait until this check succeeds before attempting other health checks.
      checkInterval: 检查周期
      successThreshold: 健康阈值
      failureThreshold: 不健康阈值
      initialDelay: 运行多少时间后开始检测
      timeout: 超时时间
      httpGet:
        port: 检查端口
        path: 请求路径
        headers: 请求头
      command:
        command: Command to run
      readinessCheck: 就绪状态检查
      livenessCheck: 存活状态检查
      startupCheck: 启动检查
      type: 类型
    security:
      privileged: 特权模式
      allowPrivilegeEscalation: 提升特权
      runAsNonRoot: 以非root用户身份运行
      runAsNonRootOptions:
        yesOption: 'Yes: containers must run as non-root-user'
        noOption: 'No'
      readOnlyRootFilesystem: 只读根文件系统
      runAsUser: 以用户身份运行
      supplementalGroups: Additional Group IDs
      addGroupIDs: Add Group IDs
      fsGroup: Filesystem Group
      addCapabilities: 增加内核功能
      dropCapabilities: 移除内核功能
      shareProcessNamespace: Share single process namespace
      hostPID: "Use Host PID Namespace"
      hostIPC: "Use Host IPC Namespace"
      sysctls: Sysctls
      sysctlsKey: 'Name'
  scheduling:
    titles:
      tab: Scheduling
      nodeScheduling: 主机调度
      podScheduling: Pod Scheduling
      tolerations: Tolerations
      priority: Priority
      advanced: Advanced
    activeDeadlineSeconds: Pod Active Deadline
    terminationGracePeriodSeconds: Termination Grace Period
    activeDeadlineSecondsTip: The duration that the pod may be active before the system tries to mark it failed and kill associated containers.
    terminationGracePeriodSecondsTip: The duration that the pod needs to terminate gracefully.
    priority:
      priority: Priority
      className: Priority Class Name
    tolerations:
      labelKey: Label Key
      operator: Operator
      value: Value
      effect: Effect
      tolerationSeconds: Toleration Seconds
      addToleration: Add Toleration
      operatorOptions: 
        exists: Exists
        equal: '='
      effectOptions:
        all: All
        noSchedule: NoSchedule,
        preferNoSchedule: PreferNoSchedule
        noExecute: NoExecute
    affinity:
      specificNode: 在特定节点上运行Pod
      schedulingRules: 在符合这些调度规则的节点上运行Pod
      requireAny: 'Require any of:'
      preferAny: 'Prefer any of:'
      thisPodNamespace: This pod's namespace
      affinityTitle: Run pods on nodes with pods matching these selectors
      antiAffinityTitle: Run pods on nodes without pods matching these selectors
      nodeName: 节点名称
      matchExpressions:
        in: '='
        notIn: ≠
        exists: Exists
        doesNotExist: Does Not Exist
        greaterThan: '>'
        lessThan: <
        key: Key
        value: Value
        operator: Operator
        addRule: Add Rule
        weight: Weight
        inNamespaces: Pods in these namespaces
  detailTop:
    image: 镜像名称
    type: 类型
    configScale: Pod配置副本数
    readyScale: Pod可用副本数
    podRestarts: Pod重启次数
    created: 创建时间
  tab:
    jobConfig: Job配置
    ports: 端口
    command: 命令
    resource: 资源
    healthCheck: 健康检查
    securityContext: 安全上下文
    networking: 网络
    nodeScheduling: 主机调度
    scalingUpgradePolicy: "伸缩/更新策略"
  jobConfig: 
    completions:
      label: 完成
      detail: 成功运行Job的Pod的数量。
    parallelism:
      label: 并行数
      detail: Job在给定时间内应运行的最大Pod数。
    backoffLimit:
      label: Back Off Limit
      detail: 标记此作业失败之前的重试次数。
    activeDeadlineSeconds:
      label: 停止延迟时间
      detail: 在系统尝试终止Job之前，job可能处于活动状态的持续时间。
  networking:
    mode: 
      label: 网络模式
      palceholder: 选择一种模式
    dnsPolicy: 
      label: DNS策略
      placeholder: 选择一种策略
    hostname: 
      label: 主机名
      placeholder: '例如: web'
    subdomain: 
      label: 子域名
      placeholder: '例如: web'
    nameservers: 
      label: DNS服务器地址
      placeholder: '例如: 192.168.2.1'
    searchDomains: 
      label: 搜索域
      placeholder: '例如: prod.example.com'
    resolvingServers: 
      label: 解析服务器
      placeholder: '例如: 114.114.114.114'
    hostAlias: 
      label: '主机别名(/etc/hosts记录)'
      tip: '额外注入到容器的 /etc/hosts记录'
      ip:
        label: IP地址
        placeholder: '例如: 192.168.0.1'
      host:
        label: 主机名
        placeholder: '例如: database'
  formUpgrade:
    strategy: 
      newOld: '滚动: 先启动新Pod，再停止旧Pod。'
      oldNew: '滚动: 先停止旧Pod，再启动新Pod。'
      recreate: 删除所有Pod，然后重新开始。
      custom: 自定义
    batchSize:
      label: 批量大小
      detail: Pod将批量启动或停止
    maxSurge:
      label: 最大浪涌
      detail: 在任何给定时间内允许超出所需规模的最大Pod数量。
    maxUnavailable:
      label: 最大不可用
      detail: 在任意给定时间最大不可用的Pod数量。
    minReadySeconds:
      label: 最短准备时间
      detail: 在Pod被视为可用之前，Pod中的容器需至少运行多长时间。
    progressDeadlineSeconds:
      label: 进度截止时间
      detail: 将部署标记为停滞状态之前需要等待多久时间才能看到进度。

pod:
  detailTop:
    workload: 工作负载
    podIp: Pod Ip
    node: 主机
    podRestarts: Pod重启次数
    created: 创建时间
  info:
    tableHeaders:
      status: 状态
      name: 名称
      image: 镜像
      imagePullPolicy: 镜像拉取策略